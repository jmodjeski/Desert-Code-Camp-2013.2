extends layout

block head

	link(rel="import", href="/elements/framework-resource.html")

block content

	polymer-element(name="meetings-resource", extends="framework-resource")
		script.
			Polymer("meetings-resource", {
				url: '/api/meetings',
				data: []
			});

	polymer-element(name="meetings-add")
		template
			form.form-inline(role="form", id="addForm", on-submit="formSubmit")
				.form-group
					input.form-control(type="text",value="{{title}}")
				button.btn.btn-default Add Meeting
		script.
			Polymer("meetings-add", {
				title: "",
				formSubmit: function(e, sender, detail){
					var self = this;
					e.preventDefault();
					self.fire('add-meeting', {
						title: self.title
					});
				}
			});

	polymer-element(name="framework-confirm-removal")
		template
			button.btn.btn-danger.pull-right(id="remove", type="button", on-click="check") Remove
			.btn-group.pull-right(id="check", on-mouseleave="cancel")
				button.btn.btn-danger(id="confirm", type="button", on-click="confirm") Confirm Removal
				button.btn.btn-default(id="cancel", type="button", on-click="cancel") Cancel

		script.
			Polymer("framework-confirm-removal", {
				publish: {
					data: null
				},
				created: function(){
					var self = this;
					$(self.$.check).hide();
				},
				check: function(e){
					var self = this;
					e.stopPropagation();
					self.active = true;
					$(self.$.remove).hide();
					$(self.$.check).show();
				},
				confirm: function(e){
					var self = this;
					e.stopPropagation();
					//- self.async(function(){
					self.cancel(e);
					self.fire("remove", self.data);
					//- })
				},
				cancel: function(e){
					var self = this;
					e.stopPropagation();
					if(self.active)
					{
						$(self.$.remove).show();
						$(self.$.check).hide();
						self.active = false;
					}
				}
			});

	polymer-element(name="meetings-list")
		style.
			.controls {
				visibility: hidden;
			}
			tr:hover .controls {
				visibility: visible;
			}
		template
			table.table.table-hover
				thead
					tr
						th Title
						th
				tbody
					template(repeat="{{meeting in meetings}}")
						tr(on-click="handleRowSelect")
							td
								a(class="default-action", href="/meeting/{{meeting._id}}") {{meeting.title}}
							td
								framework-confirm-removal(class="controls", on-remove="removeItem", data="{{meeting}}")
					
		script.
			Polymer("meetings-list", {
				meetings: [],
				created: function(){
					var self = this;

					// defers firing of the event 
					// until the page is ready
					self.async(function(){
						self.fire('get-meetings', {});
					})
				},
				removeItem: function(e, sender, detail){
					var self = this;
					self.async(function(){
						self.fire('remove-meeting', sender);
					});
				},
				handleRowSelect: function(e, sender, detail){
					console.log("event", e);
					console.log("sender", sender);
					console.log("detail", detail);
					detail.querySelector(".default-action").click();
				}
			});

	polymer-element(name="meetings-app")
		template
			meetings-add(id="add", on-add-meeting="addMeeting")
			meetings-list(id="list", on-get-meetings="loadMeetings", on-remove-meeting="removeMeeting")
			meetings-resource(id="meetings", on-query-complete="populateMeetings", on-add-complete="meetingAdded")
		script.
			Polymer("meetings-app", {
				loadMeetings: function(e, sender, detail){
					var self = this;
					self.$.meetings.query();
				},
				addMeeting: function(e, sender, detail){
					var self = this;
					self.$.meetings.create(sender);
				},
				populateMeetings: function(e, sender, detail){
					var self = this;
					self.$.list.meetings = sender.data;
				},
				meetingAdded: function(e, sender, detail){
					var self = this;
					self.$.add.title = "";
				},
				removeMeeting: function(e, sender, detail){
					var self = this;
					self.$.meetings.remove(sender.id);
				}
			});


	.row
		meetings-app.col-md-12

